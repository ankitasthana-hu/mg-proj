pipeline {
    agent any
    environment {
        repo_url = "https://github.com/ankitasthana-hu/mg-proj.git"
    }
    stages {
        stage('Preparation') {
            steps {
                sh 'python3 --version'
                sh 'python3 -m pip -V'
                echo "${params.OPERATION}"
                echo "${params.USER_ID}"
                fileupdatecheck()
            }
        }
        stage('Run Unit/Integration Test') {
            when { changeset "test_fetchrecord.py"}
            steps {
                 sh """
                 cd ${WORKSPACE}
                 ls -lrta
                 python3 -m pip install -r requirements.txt
                 python3 -m pip show pytest
                 pytest -v test_fetchrecord.py
                 """
            }
        }
    }
}

def fileupdatecheck() {
    env.GIT_PREVIOUS_COMMIT = sh(returnStdout: true, script: "git rev-parse --short HEAD^ ").trim()
    env.GIT_CURRENT_COMMIT = sh(returnStdout: true, script: "git rev-parse --short HEAD ").trim()
    env.GIT_DIFF_COMMIT = sh(returnStdout: true, script: "git diff --name-only ${env.GIT_PREVIOUS_COMMIT} ${env.GIT_CURRENT_COMMIT} test_fetchrecord.py ").trim()
    echo "Difference on commit with test : env.GIT_DIFF_COMMIT"
    if (!env.GIT_DIFF_COMMIT?.trim()) {
      echo "No changes detected on test"
      return
    }
}
